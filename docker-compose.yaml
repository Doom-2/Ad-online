version: '3.8'

services:
  db:
    image: postgres:15.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    restart: always

    healthcheck:
      test: pg_isready -U ${DB_USER} -d ${DB_NAME}
      interval: 5s
      timeout: 5s
      retries: 5

    ports:
    - "5432:5432"

    networks:
      - backend_nw

  api:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    env_file:
      - ./.env
    environment:
      POSTGRES_HOST: db
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: curl -s$ http://localhost:8000/ping/ || exit 1
      interval: 3s
      timeout: 3s
      retries: 5

    volumes:
      - ./users:/project/users
      - ./django_static:/project/django_static
      - ./django_media:/project/django_media

    networks:
      - backend_nw
      - frontend_nw

  frontend:
#    build:
#      context: frontend_react/.
#      dockerfile: Dockerfile
    image: doom2/ads-online-frontend:v1.0
    restart: always
    ports:
      - "80:80"
    depends_on:
      api:
        condition: service_healthy
    networks:
      - frontend_nw
    volumes:
#      - frontend:/code/build/
      - ./deploy/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./django_static/:/usr/share/nginx/html/django_static/
      - ./django_media/:/usr/share/nginx/html/django_media/

volumes:
  postgres_data:
#  frontend:

networks:
  backend_nw:
    driver: bridge
  frontend_nw:
    driver: bridge
